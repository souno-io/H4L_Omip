# Generated by Django 4.0.8 on 2023-02-03 07:42

import common.utils
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import mptt.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Competence',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, help_text='状态说明字段', verbose_name='激活状态')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('code', models.CharField(max_length=100, unique=True, verbose_name='codename')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('remark', models.CharField(blank=True, help_text='备注', max_length=255, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '权限',
                'verbose_name_plural': '权限',
                'ordering': ['name', 'code'],
            },
        ),
        migrations.CreateModel(
            name='ConnectionPool',
            fields=[
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(help_text='数据库配置名称', max_length=100, unique=True, verbose_name='数据库名称')),
                ('type', models.CharField(choices=[('ORACLE', 'ORACLE'), ('MYSQL', 'MYSQL'), ('SQLSERVER', 'SQLSERVER'), ('SQLITE', 'SQLITE'), ('POSTGRESQL', 'POSTGRESQL'), ('RESTAPI', 'REST访问接口')], default='POSTGRESQL', help_text='数据库类型', max_length=100, verbose_name='数据库类型')),
                ('host', models.CharField(help_text='服务器地址', max_length=1024, verbose_name='服务器地址')),
                ('port', models.CharField(help_text='服务器端口', max_length=10, verbose_name='服务器端口')),
                ('user', models.CharField(help_text='数据库用户名', max_length=1024, verbose_name='数据库用户名')),
                ('pwd', models.CharField(help_text='数据库密码', max_length=1024, verbose_name='数据库密码')),
                ('db', models.CharField(help_text='数据库名', max_length=1024, verbose_name='数据库名')),
                ('remark', models.TextField(blank=True, help_text='备注', max_length=1024, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '数据库连接池',
                'verbose_name_plural': '数据库连接池',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, help_text='状态说明字段', verbose_name='激活状态')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('name', models.CharField(help_text='Menu code, capitalized', max_length=100, unique=True, verbose_name='Module English name')),
                ('title', models.CharField(default='标题', help_text='菜单中文标题', max_length=255, verbose_name='Title')),
                ('icon', models.CharField(blank=True, default=None, help_text='图标', max_length=100, null=True, verbose_name='Icon')),
                ('path', models.CharField(blank=True, default=None, help_text='路径', max_length=100, null=True, verbose_name='路径')),
                ('type', models.CharField(blank=True, choices=[('menu', '菜单'), ('link', '链接'), ('iframe', '内嵌框架')], default='menu', help_text='类型', max_length=100, null=True, verbose_name='类型')),
                ('component', models.CharField(blank=True, default=None, help_text='组件路径', max_length=100, null=True, verbose_name='组件路径')),
                ('affix', models.BooleanField(blank=True, default=False, help_text='词缀', null=True, verbose_name='词缀')),
                ('active', models.CharField(blank=True, default=None, help_text='激活组件', max_length=100, null=True, verbose_name='激活组件')),
                ('fullpage', models.BooleanField(blank=True, default=False, help_text='整页', null=True, verbose_name='整页')),
                ('redirect', models.CharField(blank=True, default=None, help_text='重定向路径', max_length=100, null=True, verbose_name='重定向')),
                ('hidden', models.BooleanField(default=False, help_text='是否显示在菜单中显示隐藏路由', verbose_name='隐藏路由')),
                ('hiddenBreadcrumb', models.BooleanField(default=False, help_text='隐藏面包屑导航', verbose_name='隐藏面包屑导航')),
                ('levelHidden', models.BooleanField(default=False, help_text='是否显示在菜单中显示隐藏一级路由', verbose_name='显示隐藏一级路由')),
                ('noKeepAlive', models.BooleanField(default=False, help_text='当前路由是否不缓存', verbose_name='当前路由是否不缓存')),
                ('noClosable', models.BooleanField(default=True, help_text='是否可关闭多标签页', verbose_name='是否可关闭多标签页')),
                ('badge', models.CharField(blank=True, default=None, help_text='badge小标签（只支持子级）', max_length=20, null=True, verbose_name='badge小标签')),
                ('tabHidden', models.BooleanField(default=False, help_text='是否不显示多标签页', verbose_name='是否不显示多标签页')),
                ('activeMenu', models.CharField(blank=True, default=None, help_text='高亮指定菜单', max_length=20, null=True, verbose_name='高亮指定菜单')),
                ('dot', models.BooleanField(default=False, help_text='小圆点', verbose_name='小圆点')),
                ('dynamicNewTab', models.BooleanField(default=False, help_text='动态传参路由是否新开标签页', verbose_name='动态传参路由是否新开标签页')),
                ('seq', models.CharField(blank=True, default=None, help_text='排序', max_length=100, null=True, verbose_name='排序')),
                ('remark', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, max_length=100, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='system.menu', verbose_name='上级菜单')),
            ],
            options={
                'verbose_name': '菜单',
                'verbose_name_plural': '菜单',
                'ordering': ['title', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SystemConfig',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('title', models.CharField(help_text='标题', max_length=50, verbose_name='标题')),
                ('key', models.CharField(help_text='配置键', max_length=100, unique=True, verbose_name='Config code')),
                ('value', models.TextField(help_text='配置值', verbose_name='配置值')),
                ('type', models.CharField(blank=True, choices=[('TEXT', '文本'), ('TEXTAREA', '大文本'), ('NUMBER', '数字'), ('SELECT', '选项'), ('RADIO', '单选'), ('CHECKBOX', '复选'), ('DATE', '日期'), ('DATETIME', '日期时间'), ('IMAGES', '图片'), ('FILES', '文件'), ('TIME', '时间'), ('ARRAY', '数组'), ('SQL', 'SQL代码'), ('URL', 'URL连接'), ('OTHER', '其他')], default='TEXT', help_text='配置项类型', max_length=20, verbose_name='配置项类型')),
                ('sort', models.IntegerField(blank=True, default=0, help_text='表单类型', null=True, verbose_name='排序')),
                ('rule', models.JSONField(blank=True, help_text='校验规则', null=True, verbose_name='校验规则')),
                ('data_options', models.JSONField(blank=True, help_text='数据options', null=True, verbose_name='数据options')),
                ('setting', models.JSONField(blank=True, help_text='配置', null=True, verbose_name='配置')),
                ('placeholder', models.CharField(blank=True, help_text='提示信息', max_length=200, null=True, verbose_name='提示信息')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
            ],
            options={
                'verbose_name': 'system settings',
                'verbose_name_plural': 'system settings',
            },
        ),
        migrations.CreateModel(
            name='SystemLogs',
            fields=[
                ('is_active', models.BooleanField(default=True, help_text='状态说明字段', verbose_name='激活状态')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('sip', models.GenericIPAddressField(blank=True, help_text='服务器IP地址', null=True, verbose_name='服务器IP地址')),
                ('dip', models.GenericIPAddressField(blank=True, help_text='客户端IP地址', null=True, verbose_name='客户端IP地址')),
                ('body', models.TextField(blank=True, help_text='Request body', max_length=1024, null=True, verbose_name='Request body')),
                ('path', models.CharField(blank=True, help_text='Request path', max_length=1024, null=True, verbose_name='Request path')),
                ('method', models.CharField(blank=True, help_text='Request method', max_length=20, null=True, verbose_name='Request method')),
                ('username', models.CharField(blank=True, help_text='Request username', max_length=200, null=True, verbose_name='Request username')),
                ('status_code', models.CharField(blank=True, help_text='Request status code', max_length=200, null=True, verbose_name='Request status code')),
                ('reason_phrase', models.CharField(blank=True, help_text='Reason phrase', max_length=200, null=True, verbose_name='Reason phrase')),
                ('time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='时间')),
            ],
            options={
                'verbose_name': '系统日志',
                'verbose_name_plural': '系统日志',
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='UploadFile',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, help_text='状态说明字段', verbose_name='激活状态')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('file', models.FileField(default='avatar/default.png', help_text='存放文件字段', upload_to=common.utils.PathAndRename('avatar/2023-02-03/'), verbose_name='上传的文件')),
            ],
            options={
                'verbose_name': '上传文件',
                'verbose_name_plural': '上传文件',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, help_text='状态说明字段', verbose_name='激活状态')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('code', models.CharField(help_text='角色代码', max_length=100, verbose_name='code')),
                ('label', models.CharField(help_text='角色名称', max_length=255, verbose_name='角色名')),
                ('remark', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='备注')),
                ('competences', models.ManyToManyField(blank=True, related_name='role_competences', related_query_name='role', to='system.competence', verbose_name='权限')),
                ('menus', models.ManyToManyField(blank=True, related_name='role_menus', related_query_name='role', to='system.menu', verbose_name='菜单')),
            ],
            options={
                'verbose_name': '角色',
                'verbose_name_plural': '角色',
                'ordering': ['label', 'code'],
            },
        ),
        migrations.CreateModel(
            name='Dictionary',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, help_text='状态说明字段', verbose_name='激活状态')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('code', models.CharField(blank=True, help_text='编码', max_length=100, null=True, verbose_name='编码')),
                ('label', models.CharField(blank=True, help_text='显示名称', max_length=100, null=True, verbose_name='显示名称')),
                ('value', models.CharField(blank=True, help_text='实际值', max_length=100, null=True, verbose_name='实际值')),
                ('status', models.BooleanField(blank=True, default=True, help_text='状态', verbose_name='状态')),
                ('sort', models.IntegerField(blank=True, default=1, help_text='显示排序', null=True, verbose_name='显示排序')),
                ('remark', models.CharField(blank=True, help_text='备注', max_length=2000, null=True, verbose_name='备注')),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, help_text='父级', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sublist', to='system.dictionary', verbose_name='父级')),
            ],
            options={
                'verbose_name': '系统字典',
                'verbose_name_plural': '系统字典',
                'ordering': ('sort',),
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, help_text='状态说明字段', verbose_name='激活状态')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('label', models.CharField(help_text='部门名称', max_length=100, verbose_name='部门名称')),
                ('code', models.CharField(help_text='部门代码', max_length=50, verbose_name='部门代码')),
                ('remark', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='备注')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('competences', models.ManyToManyField(blank=True, to='system.competence', verbose_name='权限')),
                ('menus', models.ManyToManyField(blank=True, to='system.menu', verbose_name='菜单')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='system.department', verbose_name='上级部门')),
            ],
            options={
                'verbose_name': '科室',
                'verbose_name_plural': '科室',
                'ordering': ['label', 'code'],
            },
        ),
    ]
